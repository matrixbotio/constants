let YAML,promises,resolve,js,go;_2b8‍.x([["default",()=>_2b8‍.o]]);_2b8‍.w("yaml",[["default",["YAML"],function(v){YAML=v}]]);_2b8‍.w("fs",[["promises",["promises"],function(v){promises=v}]]);_2b8‍.w("path",[["resolve",["resolve"],function(v){resolve=v}]]);_2b8‍.w("../generators/errors-js.mjs",[["default",["js"],function(v){js=v}]]);_2b8‍.w("../generators/errors-go.mjs",[["default",["go"],function(v){go=v}]]);





const { readFile, writeFile } = promises;

const yamlFile = resolve(process.env.INPUT_CONFIG_PATH, 'errors.yml');
const yaml = readFile(yamlFile, 'utf8').then(YAML.parse);

// destinations
const jsFile = resolve(process.env.INPUT_DEST_PATH, 'errors.js');
const goFile = resolve(process.env.INPUT_DEST_PATH, 'errors.go');

const _2b8‍anonymous=async () => {
    const structure = await yaml;
    await Promise.all([
        writeFile(jsFile, js(structure)),
        writeFile(goFile, go(structure))
    ]);
};_2b8‍.d(_2b8‍anonymous);
